diff --git a/package/flynet/src/flynet.c b/package/flynet/src/flynet.c
index 2a57fc3..b460938 100644
--- a/package/flynet/src/flynet.c
+++ b/package/flynet/src/flynet.c
@@ -1307,12 +1307,18 @@ static int fly_add_to_tx_queue(struct net_device* dev, struct sk_buff*skb, struc
 //	frame_duration = (skb->len + fp->wdev->hard_header_len) * 1000000 * 8 / (bitrate * 1024);	// original
 	frame_duration = (skb->len + fp->wdev->hard_header_len) * 15625  / (bitrate * 2) + 144;		// add 144us as empirical calculated preamble duration time
 
-	// check if this frame will fit this timeslot
 	if (fp->mode == 1)	// master
 		limit_us = fp->wdev->dwstream_timeslot;
 	else if (fp->mode == 0)
 		limit_us = fp->wdev->upstream_timeslot;
 
+	// does this frame use the reserved (resend) area?
+	if (usereserve == 1) {
+		limit_us *= fp->spacetoreserve;
+		limit_us /= 100;
+	}
+	
+	// check if this frame will fit this timeslot
 	if (fp->used_us_in_timeslot + frame_duration >= limit_us)
 		return 1;				// this frame doesn't fit timeslot (there are already too many frames in timeslot)
 
@@ -1516,7 +1522,7 @@ static void fly_tasklet_r(unsigned long data)
 
 	//if(fp->rxlost && fp->resend)
 	if (adapt_enable_tx == 1)
-		fly_fill_up_tx((struct net_device*)data, 1);
+		fly_fill_up_tx((struct net_device*)data, 0);
 
 	// avoid missrx-es while switching ath cards
 	if (diversity_switchtx_req == 1) {
